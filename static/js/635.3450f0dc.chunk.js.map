{"version":3,"file":"static/js/635.3450f0dc.chunk.js","mappings":"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","sources":["config-client.js","api/APIInterface.mjs","config-global.mjs","common.mjs","api/GBZBaseAPI.mjs","api/local/WorkerImplementation.mjs","api/local/Worker.mjs","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["// config-client.js: Must be run on the client before config-global.mjs will work.\n\nimport config from \"./config.json\";\n\nconst GLOBAL_NAME = \"__sequence_tube_map_config\";\n// Tell eslint that globalThis might exist.\n/*global globalThis*/\nconst GLOBAL_HOME = globalThis || window || global;\n\n// Hide the config in the globals object when we run.\nGLOBAL_HOME[GLOBAL_NAME] = config;\n","// Interface for handling function called from the tubemap frontend\n// Abstract class expecting different implmentations of the following functions\n// Substituting different subclasses should allow the functions to give the same result\nexport class APIInterface {\n  // Takes in and process a tube map view(viewTarget) from the tubemap container.\n  // Expects a object to be returned with the necessary information to draw a tubemap from vg\n  // object should contain keys: graph, gam, region, coloredNodes.\n  // cancelSignal is an AbortSignal that can be used to cancel the request.\n  // If the request is not structured correctly, or something goes wrong\n  // internally, throws an Error.\n  async getChunkedData(viewTarget, cancelSignal) {\n    throw new Error(\"getChunkedData function not implemented\");\n  }\n\n  // Returns files used to determine what options are available in the track picker.\n  // Returns object with keys: files, bedFiles.\n  // files holds an array of objects like {  name: string; type: filetype;}, where filetype is a file type like \"graph\".\n  // bedFiles just holds an array of strings.\n  // cancelSignal is an AbortSignal that can be used to cancel the request.\n  async getFilenames(cancelSignal) {\n    throw new Error(\"getFilenames function not implemented\");\n  }\n\n  // Get notifications (via calls to handler()) when the set of filenames available from getFilenames() has changed.\n  // Returns a subscription object that should be kept around as long as you still want updates.\n  // cancelSignal is an AbortSignal that can be used to cancel the stream of notifications.\n  subscribeToFilenameChanges(handler, cancelSignal) {\n    throw new Error(\"subscribeToFilenameChanges function not implemented\");\n  }\n\n  // Upload a file.\n  // fileType is a track type like \"graph\" or \"read\".\n  // file is the file data (Blob or File).\n  // cancelSignal is an AbortSignal that can be used to cancel the upload.\n  // Resolves with the file name that can be used to refer to the uploaded file.\n  async putFile(fileType, file, cancelSignal) {\n    throw new Error(\"putFile function not implemented\");\n  }\n\n  // Takes in a bedfile path or a url pointing to a raw bed file.\n  // Returns object with key: bedRegions.\n  // bedRegions contains information extrapolated from each line of the bedfile.\n  // cancelSignal is an AbortSignal that can be used to cancel the request.\n  async getBedRegions(bedFile, cancelSignal) {\n    throw new Error(\"getBedRegions function not implemented\");\n  }\n\n  // Takes in a graphFile path.\n  // Returns object with key: pathNames.\n  // Returns pathnames available in a graphfile.\n  // cancelSignal is an AbortSignal that can be used to cancel the request.\n  async getPathNames(graphFile, cancelSignal) {\n    throw new Error(\"getPathNames function not implemented\");\n  }\n\n  // Expects a bed file(or url) and a chunk name.\n  // Attempts to download tracks associated with the chunk name from the bed file if it is a URL.\n  // Returns object with key: tracks.\n  // Returns tracks found from local directories as a tracks object.\n  // cancelSignal is an AbortSignal that can be used to cancel the request.\n  async getChunkTracks(bedFile, chunk, cancelSignal) {\n    throw new Error(\"getChunkTracks function not implemented\");\n  }\n}\n\nexport default APIInterface;\n","// config-global.mjs: Provide access to the config, assuming config-client.js or config-server.mjs has been imported already.\n// Import this instead of config.json! This is the One True Way to get the config!\n\nconst GLOBAL_NAME = \"__sequence_tube_map_config\";\n// Tell eslint that globalThis might exist.\n/*global globalThis*/\nconst GLOBAL_HOME = globalThis || window || global;\n\n// Find the config in the globals.\nexport const config = GLOBAL_HOME[GLOBAL_NAME];\n\nif (!config) {\n  throw new Error(\n    \"config-global.mjs loaded before either config-client.js or config-server.mjs\"\n  );\n}\n\nexport default config;\n","// common.mjs: shared functions between client and server\n\n// NOTE! Since this file is imported on the server *and* transpiled for the\n// client, we CANNOT import config.json. It would require syntax on Node which\n// is not allowed by the transpiler.\n// So we get the cinfig a fancy way instead. But you *must* import config-client.js or config-server.,js before this file!\nimport { config } from \"./config-global.mjs\";\n\n// function to remove commas from coordinate input\nconst removeCommas = (input) => {\n  let parts = input.split(\":\");\n  if (parts.length < 2) {\n    return input;\n  }\n  // get coordinate - numerical range after last colon\n  let coordinates = parts[parts.length - 1];\n  coordinates = coordinates.replace(/,/g, \"\");\n  // put region input coordinate back together\n  parts[parts.length - 1] = coordinates;\n  let fixedInputValue = parts.join(\":\");\n  return fixedInputValue;\n};\n\n// Parse a region string into:\n// { contig, start, end }\n// or\n// { contig, start, distance }\n//\n// a region string could look like: \"17:1-100\"\n// \n// For distance, + is used as the coordinate separator. For start/end ranges, - is used.\n// The coordinates are set off from the contig by the last colon.\n// Commas in coordinates are removed.\n//\n// Throws an Error if the region was not understood.\nexport function parseRegion(region) {\n  if (!region || region === \"none\") {\n    throw new Error(\"Missing region.\");\n  }\n  if (!region.includes(\":\")) {\n    throw new Error(\"Region doesn't contain a ':'.\");\n  }\n  if (region.endsWith(\":\")) {\n    throw new Error(\"Region ends with a ':' and is missing coordinates.\");\n  }\n\n  region = removeCommas(region);\n\n  // Get the part of the region after the last colon\n  let region_col = region.split(\":\");\n  let start_end = region_col[region_col.length - 1].split(\"-\");\n  let pos_dist = region_col[region_col.length - 1].split(\"+\");\n\n  let contig = region_col.slice(0, -1).join(\":\");\n\n  if (start_end.length === 2) {\n    let start = Number(start_end[0]);\n    let end = Number(start_end[1]);\n    return { contig, start, end };\n  } else if (pos_dist.length === 2) {\n    let start = Number(pos_dist[0]);\n    let distance = Number(pos_dist[1]);\n    return { contig, start, distance };\n  } else {\n    throw new Error(\"Coordinates must be in the form 'X:Y-Z' or 'X:Y+Z'.\");\n  }\n}\n\n/// Return a version of region that is {contig, start, end} even if region is {contig, start, distance}\nexport function convertRegionToRangeRegion(region) {\n  if (region.distance !== undefined) {\n    // Has a distance and not an end.\n    return {\n      contig: region.contig,\n      start: region.start,\n      end: region.start + region.distance,\n    };\n  } else {\n    // Should already have an end.\n    return region;\n  }\n}\n\n// Take a { contig, start, end} region and turn it into a\n// string compatible with parseRegion() or with vg.\nexport function stringifyRangeRegion({ contig, start, end }) {\n  return contig.concat(\":\", start, \"-\", end);\n}\n\n// Take a {contig, start, end} or {contig, start, distance} region and turn it into a string compatible with parseRegion\nexport function stringifyRegion(region) {\n  if (region.distance !== undefined) {\n    // It is a distance-based region\n    return region.contig.concat(\":\", region.start, \"+\", region.distance);\n  } else {\n    // It is a range region\n    return stringifyRangeRegion(region);\n  }\n}\n\n/* This function accepts a track type input and returns the default color scheme for that track type if the \ntrack type is valid */\nexport function defaultTrackColors(trackType) {\n  if (trackType === \"graph\") {\n    return config.defaultGraphColorPalette;\n  } else if (trackType === \"read\") {\n    return config.defaultReadColorPalette;\n  } else if (trackType === \"haplotype\") {\n    return config.defaultHaplotypeColorPalette;\n  } else if (trackType === \"node\") {\n    return config.defaultHaplotypeColorPalette;\n  } else {\n    throw new Error(\"Invalid track type: \" + trackType);\n  }\n}\n\n/* Function to determine if any of the tracks are reads, where the tracks parameter is an object of track types */\nexport function readsExist(tracks) {\n  for (let key in tracks) {\n    if (tracks[key].trackType === \"read\") {\n      return true;\n    }\n  }\n  return false;\n}\n\n// Accepts a string, returns whether or not the input is a valid http URL we can call fetch on\nexport function isValidURL(string) {\n  if (!string) {\n    return false;\n  }\n\n  let url;\n  try {\n    url = new URL(string);\n  } catch (error) {\n    return false;\n  }\n\n  return url.protocol === \"http:\" || url.protocol === \"https:\";\n}\n\nexport function isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n","/**\n * GBZBase-based API implementation. Designed to run in a worker efficiently.\n */\n\n// Use this magic comment to tell eslint we are allowed to use worker things\n// during the Webpack build.\n/* eslint-env worker */\n\nimport \"../config-client.js\";\nimport { APIInterface } from \"./APIInterface.mjs\";\nimport { WASI, File, OpenFile, SyncOPFSFile, PreopenDirectory } from \"@bjorn3/browser_wasi_shim\";\n\nimport {\n  parseRegion,\n  convertRegionToRangeRegion,\n  stringifyRegion\n} from \"../common.mjs\";\n\n// The Webpack way to get the WASM would be something like:\n// \n// import QueryWasm from \"gbz-base/query.wasm\";\n// \n// In Jest, not only is the export mapping not working, but also it can't get\n// us a fetch-able string from the import like Webpack does.\n//\n// So we use this function to detect if we are on Jest and get the blob from\n// the filesystem then, and to otherwise get ti with fetch.\n\n// Resolve with the bytes or Response of the WASM query blob, on Jest or Webpack.\nasync function getWasmBytes() {\n  if (getWasmBytes.cached) {\n    return getWasmBytes.cached;\n  }\n\n  let blobBytes = null;\n\n  if (typeof window === \"undefined\" || !window[\"jest\"]) {\n    // Not running on Jest, we should be able to dynamic import a binary asset\n    // by export name and get the bytes, and Webpack will handle it.\n    try {\n      let blobImport = await import(\"gbz-base/query.wasm\");\n      return fetch(blobImport.default);\n    } catch (e) {\n      console.error(\"Could not dynamically import WASM blob.\", e);\n      // Leave blobBytes unset to try a fallback method.\n    }\n  }\n\n  if (!blobBytes) {\n    // Either we're on Jest, or the dynamic import didn't work (maybe we're on\n    // plain Node?).\n    //\n    // Try to open the file from the filesystem.\n    //\n    // Don't actually try and ship the filesystem module in the browser though:\n    // see <https://webpack.js.org/api/module-methods/#webpackignore>\n    let fs = await import(/* webpackIgnore: true */ \"fs-extra\");\n    blobBytes = await fs.readFile(\"node_modules/gbz-base/target/wasm32-wasi/release/query.wasm\");\n  } \n\n  console.log(\"Got blob bytes: \", blobBytes);\n  getWasmBytes.cached = blobBytes;\n  return blobBytes;\n}\n\n/**\n * Get an ArrayBuffer from a Blob. Works in both the browser and in jsdom\n * (which doesn't actually implement .arrayBuffer(); see\n * <https://github.com/jsdom/jsdom/issues/2555>).\n */\nexport async function blobToArrayBuffer(blob) {\n  try {\n    // Browser blob has this method.\n    return await blob.arrayBuffer()\n  } catch {\n    // jsdom blob needs to go through a FileReader\n    return new Promise((resolve, reject) => {\n      let reader = new FileReader();\n      reader.addEventListener(\"load\", () => { resolve(reader.result); });\n      reader.addEventListener(\"error\", () => { reject(reader.error); });\n      reader.readAsArrayBuffer(blob);\n    });\n  }\n}\n\n/**\n * Convert a graph from GBZ-style JSON to vg-style JSON that matches the vg\n * protobuf schema. See\n * <https://github.com/vgteam/libvgio/blob/45d8ada05ee1d1405ef44d93f2ac00a5a097dd09/deps/vg.proto>\n *\n * Does not leave the input graph intact.\n */\nfunction convertSchema(inGraph) {\n  \n  let outGraph = {};\n\n  // \"nodes\" becomes \"node\"\n  outGraph[\"node\"] = inGraph[\"nodes\"];\n\n  // We have to track the node lengths to synthisize the path mappings.\n  let nodeLength = new Map();\n  for (let node of outGraph[\"node\"]) {\n    nodeLength.set(node[\"id\"], node[\"sequence\"].length);\n  }\n\n  // \"edges\" becomes \"edge\"\n  outGraph[\"edge\"] = inGraph[\"edges\"];\n  for (let edge of outGraph[\"edge\"]) {\n    // And the names for the reverse flags change.\n    edge[\"from_start\"] = edge[\"from_is_reverse\"];\n    delete edge[\"from_is_reverse\"];\n    edge[\"to_end\"] = edge[\"to_is_reverse\"];\n    delete edge[\"to_is_reverse\"];\n  }\n\n  // \"paths\" becomes \"path\"\n  outGraph[\"path\"] = inGraph[\"paths\"];\n  for (let path of outGraph[\"path\"]) {\n    path[\"mapping\"] = [];\n    for (let visit of path[\"path\"]) {\n      let length = nodeLength.get(visit[\"id\"]);\n      // Make a full-length perfect match mapping\n      let mapping = {\n        \"position\": {\"node_id\": visit[\"id\"], \"is_reverse\": visit[\"is_reverse\"]},\n        \"edit\": [{\"from_length\": length, \"to_length\": length}]\n      };\n      path[\"mapping\"].push(mapping);\n    }\n\n    delete path[\"path\"];\n  }\n  return outGraph;\n}\n\n/**\n * Implementation of a WASI Browser Shim file that is backed by FileReaderSync and operates on a backing Blob.\n *\n * Read-only.\n *\n * We extend SyncOPFSFile because then we can use OpenSyncOPFSFile for free, as long as we re-implement this.handle.\n */\nclass SyncWorkerBlobFile extends SyncOPFSFile {\n  constructor(backing_blob) {\n    super(new FileSystemSyncAccessHandlePolyfill(backing_blob), {readonly: true});\n  }\n}\n\n/**\n * Implementation of the API of FileSystemSyncAccessHandle\n * <https://developer.mozilla.org/en-US/docs/Web/API/FileSystemSyncAccessHandle>,\n * as used by Browser WASI Shim\n * <https://github.com/bjorn3/browser_wasi_shim/blob/527f4dfee4a0568a7f42e9c0e940aaad7b79d23c/src/fs_core.ts#L460-L470>.\n *\n * Implements the API on top of a Blob, using FileReaderSync.\n *\n * Only allows read access.\n */\nclass FileSystemSyncAccessHandlePolyfill {\n  /**\n   * Make a new FileSystemSyncAccessHandlePolyfill acting like a\n   * FileSystemSyncAccessHandle to the file represented by the given Blob.\n   */\n  constructor(blob) {\n    // Start open\n    this.closed = false;\n    // Save the blob\n    this.blob = blob;\n    // Make sure right away we actually can have a FileReaderSync\n    this.reader = new FileReaderSync();\n  }\n  \n  /**\n   * Close the file.\n   */\n  close() {\n    this.closed = true;\n  }\n\n  /**\n   * Flush changes to the file to disk.\n   *\n   * Not implemented since we are read-only.\n   */\n  flush() {\n    throw new Error(\"Flush not implemented; blobs are read only\");\n  }\n\n  /**\n   * Get the size of the file in bytes as a number.\n   */\n  getSize() {\n    if (this.closed) {\n      throw new Error(\"Can't get size of closed file\");\n    }\n    \n    return this.blob.size;\n  }\n\n  /**\n   * Read into the given ArrayBuffer or ArrayBufferView.\n   *\n   * Starts at 0 in the file, unless \"at\" is set in options, in which case it\n   * starts there in the file.\n   *\n   * Tries to fill the whole buffer/view.\n   *\n   * Returns the number of bytes read.\n   */\n  read(buffer, options) {\n    if (this.closed) {\n      throw new Error(\"Can't read closed file\");\n    }\n\n    // Use the actual buffer we got with offset 0, or get the buffer and offset\n    // out of the view\n    let destinationBuffer = buffer.buffer ?? buffer;\n    let destinationOffest = buffer.byteOffset ?? 0;\n  \n    // Where should we start in the file\n    let startByte = options?.at ?? 0;\n\n    // How many bytes are we going to move?\n    //\n    // ArrayBuffer and ArrayBufferView both have a byteLength to see how much\n    // we were asked for.\n    //\n    // But we can't read past the end of the Blob.\n    let length = Math.min(buffer.byteLength, this.blob.size - startByte);\n\n    // Slice the blob to the part we want to read.\n    let partBlob = this.blob.slice(startByte, startByte + length);\n\n    // And read into a new ArrayBuffer using the sync reader.\n    let partBuffer = this.reader.readAsArrayBuffer(partBlob);\n\n    // Now blit from that buffer into the destination\n    let destinationArray = new Uint8Array(destinationBuffer, destinationOffest, length);\n    let sourceArray = new Uint8Array(partBuffer, 0, length);\n    destinationArray.set(sourceArray);\n\n    // Return the length we thought we could do\n    return length;\n  }\n  \n  /**\n   * Truncate the file to the given number of bytes.\n   *\n   * Not implemented since we are read-only.\n   */\n  truncate(to: number) {\n    throw new Error(\"Truncate not implemented; blobs are read only\");\n  }\n  \n  /**\n   * Write the given buffer or view's contents to the file.\n   *\n   * Writes at the start of the file, unless at is set in options, in which\n   * case it writes at that position in the file. Returns the number of bytes\n   * written.\n   *\n   * Not actually implemented since we are read-only.\n   */\n  write(buffer, options) {\n    throw new Error(\"Write not implemented; blobs are read only\");\n  }\n\n}\n\n/**\n * API implementation that uses tools compiled to WebAssembly, client-side.\n *\n * Can operate either in the main thread or in a worker, but handles file\n * uploads differently depending on where you put it.\n */\nexport class GBZBaseAPI extends APIInterface {\n  constructor() {\n    super();\n\n    // We can take user uploads, in which case we need to hold on to them somewhere.\n    // This holds all the file objects.\n    this.files = [];\n\n    // We need to index all their names by type.\n    this.filesByType = new Map();\n\n    // This is a promise for the compiled WebAssembly blob.\n    this.compiledWasm = undefined;\n  }\n\n  // Make sure our WASM backend is ready.\n  async setUp() {\n    if (this.compiledWasm === undefined) {\n      // Kick off and save exactly one request to get and load the WASM bytes.\n      this.compiledWasm = getWasmBytes().then((result) => {\n        if (result instanceof Response) {\n          // If a fetch request was made, compile as it streams in\n          return WebAssembly.compileStreaming(result);\n        } else {\n          // We have all the bytes, so compile right away.\n          // TODO: Put this logic in the function?\n          return WebAssembly.compile(result);\n        }\n      });\n    }\n\n    // Wait for the bytes to be available.\n    this.compiledWasm = await this.compiledWasm;\n  }\n\n  // Make a call into the WebAssembly code and return the result.\n  //\n  // If workingDirectory is set, it is an object from filename to blob to\n  // present as the current directory.\n  async callWasm(argv, workingDirectory) {\n    if (argv.length < 1) {\n      // We need at least one command line argument to be the program name.\n      throw new Error(\"Not safe to invoke main() without program name\");\n    }\n    \n    // Make sure this.compiledWasm is set.\n    // TODO: Change to an accessor method?\n    await this.setUp();\n    \n    // Define the places to store program input and output\n    let stdin = new File([]);\n    let stdout = new File([]);\n    let stderr = new File([]);\n\n    // Environment variables as NAME=value strings\n    const environment = [\"RUST_BACKTRACE=full\"];\n    \n    // File descriptors for the process in number order\n    let fileDescriptors = [new OpenFile(stdin), new OpenFile(stdout), new OpenFile(stderr)];\n    \n    if (workingDirectory) {\n      let nameToWASIFile = {};\n      for (const [filename, blob] of Object.entries(workingDirectory)) {\n        console.log(`Mount ${blob.size} byte blob:`, blob);\n        if (typeof FileReaderSync !== \"undefined\") {\n          // On a worker where we can do sync reads\n           nameToWASIFile[filename] = new SyncWorkerBlobFile(blob);\n        } else {\n          // In the main thread where we can't do sync reads\n          console.warn(\"Sync blob read is not available. Reading \" + blob.size + \" byte blob into memory asynchronously to consult synchronously later!\");\n          nameToWASIFile[filename] = new File(await blobToArrayBuffer(blob));\n        }\n        console.log(\"Mount file:\", nameToWASIFile[filename]);\n      }\n      // As shown in the browser_wasi_shim examples, if we provide a\n      // PreopenDirectory at FD 4 it is shown to the process.\n      fileDescriptors.push(new PreopenDirectory(\".\", nameToWASIFile));\n    }\n\n    // Set up the WASI interface\n    let wasi = new WASI(argv, environment, fileDescriptors);\n    \n    // Set up the WebAssembly run\n    let instantiation = await WebAssembly.instantiate(this.compiledWasm, {\n        \"wasi_snapshot_preview1\": wasi.wasiImport,\n    });\n    \n    console.log(\"Running WASM with arguments:\", argv)\n    console.log(\"Running WASM with FDs:\", fileDescriptors)\n\n    let returnCode = null;\n    let stdOutText = null;\n    let stdErrText = null;\n\n    try {\n      // Make the WASI system call main\n      returnCode = wasi.start(instantiation);\n      // TODO: the shim logs loads of attempts to make/open the lock file, is it maybe not being allowed to be read back?\n      // TODO: Our return code is undefined for some reason; it is supposed to come out of start.\n      console.log(\"Execution finished with return code:\", returnCode);\n    } finally {\n      // The WASM code can throw right out of the WASI shim if Rust panics.\n      stdOutText = new TextDecoder().decode(stdout.data);\n      stdErrText = new TextDecoder().decode(stderr.data);\n      console.log(\"Standard Output:\", stdOutText);\n      console.log(\"Standard Error:\", stdErrText);\n    }\n\n    return {returnCode, stdout: stdOutText, stderr: stdErrText}\n  }\n  \n  // Return true if the WASM setup is working, and false otherwise.\n  async available() {\n    try {\n      await this.callWasm([\"query\", \"--help\"]);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /////////\n  // Tube Map API implementation\n  /////////\n\n  async getChunkedData(viewTarget, cancelSignal) {\n  \n    console.log(\"Got view target:\", viewTarget)\n\n    // Find the graph track\n    let graphTrack = null\n    // TODO: We need to handle object tracks; move to array tracks only!\n    for (let trackKey in viewTarget.tracks) {\n      let track = viewTarget.tracks[trackKey];\n      if (track.trackType === \"graph\") {\n        graphTrack = track;\n      }\n    }\n    if (!graphTrack) {\n      throw new Error(\"No graph track selected\");\n    }\n\n    // Since all the names are numbers, parse it and get the real file blob\n    let graphFileBlob = this.files[parseInt(graphTrack.trackFile)];\n\n    if (graphFileBlob === undefined) {\n      throw new Error(\"Graph file \" + graphTrack.trackFile + \" does not exist\");\n    }\n\n    // Find the region\n    let region = convertRegionToRangeRegion(parseRegion(viewTarget.region));\n\n    if (!region.contig.includes(\"#\")) {\n      // This isn't PanSN already so adjust to ask for a generic path.\n      region.contig = \"_gbwt_ref#\" + region.contig;\n    }\n\n    let parts = region.contig.split(\"#\");\n\n    let {stdout} = await this.callWasm([\"query\", \"--sample\", parts[0], \"--contig\", parts[parts.length - 1], \"--interval\", `${region.start}..${region.end}`, \"--format\", \"json\", \"--distinct\", \"graph.gbz.db\"], {\"graph.gbz.db\": graphFileBlob});\n\n    let result = convertSchema(JSON.parse(stdout));\n\n    return {\n      graph: result,\n      gam: [],\n      region: stringifyRegion(region),\n      coloredNodes: [],\n    };\n  }\n\n  async getFilenames(cancelSignal) {\n    // Set up an empty response.\n    let response = {\n      files: [],\n      bedFiles: [],\n    };\n\n    for (let [type, files] of this.filesByType) {\n      if (type === \"bed\") {\n        // Just send all these files in bedFiles.\n        response.bedFiles = files;\n      } else {\n        for (let fileName of files) {\n          // We sens a name/type record for each non-BED file\n          response.files.push({ name: fileName, type: type });\n        }\n      }\n    }\n\n    return response;\n  }\n\n  subscribeToFilenameChanges(handler, cancelSignal) {\n    return {};\n  }\n\n  async putFile(fileType, file, cancelSignal) {\n    // We track files just by array index.\n    let fileName = this.files.length.toString();\n    // Just hang on to the File object.\n    this.files.push(file);\n\n    console.log(`Store ${file.size} byte upload:`, file);\n\n    if (!this.filesByType.has(fileType)) {\n      this.filesByType.set(fileType, []);\n    }\n    // Index the name we produced by type.\n    this.filesByType.get(fileType).push(fileName);\n\n    return fileName;\n  }\n\n  async getBedRegions(bedFile, cancelSignal) {\n    return {\n      bedRegions: [],\n    };\n  }\n\n  async getPathNames(graphFile, cancelSignal) {\n    return {\n      pathNames: [],\n    };\n  }\n\n  async getChunkTracks(bedFile, chunk, cancelSignal) {\n    return {\n      tracks: [],\n    };\n  }\n}\n\nexport default GBZBaseAPI;\n","/**\n * Guts of the local API Web Worker. Runs in a web worker in the browser and in the main thread in Jest.\n */\n\nimport { RpcProvider } from \"worker-rpc\";\n\n// We are actually a proxying wrapper around this actual implementation.\nimport { GBZBaseAPI } from \"../GBZBaseAPI.mjs\";\n\nexport function setUpWorker(self) {\n  // Here we have access to the Web Worker self (or a good immitation)\n\n  // Set up an RPC channel over the web worker message passing.\n  // This one doesn't assume we're *really* using a worker, which is important\n  // because sometimes it is mocked out.\n  const rpc = new RpcProvider((message, transfer) => {\n    return self.postMessage(message, transfer);\n  });\n\n  // Hook up the incoming messages to the provider.\n  self.addEventListener(\"message\", (e) => {\n    return rpc.dispatch(e.data);\n  });\n\n  // Make an API implementation.\n  // Really we just proxy between this in ther worker and a proxy object in the\n  // page thread.\n  const api = new GBZBaseAPI();\n  \n  // Now register RPC messages. The handlers can only take a sungle object, but\n  // they can be async.\n  \n  // Because we can't get cancel signals themselves over the channel, we need to make new abort controllers here.\n  let abortControllers = new Map();\n\n  // Get a cancellation signal that will trip when the given request is\n  // canceled. If the passed ID is undefined, returns undefined, and the\n  // request cannot be canceled.\n  function getSignal(requestID) {\n    if (requestID === undefined) {\n      return undefined;\n    }\n    abortControllers.set(requestID, new AbortController());\n    return abortControllers.get(requestID).signal;\n  }\n  \n  // When a request finishes, get rid of the AbortController for canceling it.\n  function requestOver(requestID) {\n    abortControllers.delete(requestID);\n  }\n\n  // When someone wants to cancel a request, flip its AbortController.\n  function cancelRequest(requestID) {\n    if (abortControllers.has(requestID)) {\n      // If the request is still in flight, abort it.\n      abortControllers.get(requestID).abort()\n    }\n  }\n\n  // Instead of taking real cancel signals, we take unique IDs that can be canceled with another call.\n  rpc.registerRpcHandler('getChunkedData', async ({viewTarget, cancelID}) => {\n    try {\n      return await api.getChunkedData(viewTarget, getSignal(cancelID));\n    } finally {\n      requestOver(cancelID);\n    }\n  });\n\n  rpc.registerRpcHandler('getFilenames', async ({cancelID}) => {\n    try {\n      return await api.getFilenames(getSignal(cancelID));\n    } finally {\n      requestOver(cancelID);\n    }\n  });\n\n  rpc.registerRpcHandler('putFile', async ({fileType, file, cancelID}) => {\n    try {\n      return await api.putFile(fileType, file, getSignal(cancelID));\n    } finally {\n      requestOver(cancelID);\n    }\n  });\n\n  rpc.registerRpcHandler('getBedRegions', async ({bedFile, cancelID}) => {\n    try {\n      return await api.getBedRegions(bedFile, getSignal(cancelID));\n    } finally {\n      requestOver(cancelID);\n    }\n  });\n\n  rpc.registerRpcHandler('getPathNames', async ({graphFile, cancelID}) => {\n    try {\n      return await api.getPathNames(graphFile, getSignal(cancelID));\n    } finally {\n      requestOver(cancelID);\n    }\n  });\n\n  rpc.registerRpcHandler('getChunkTracks', async ({bedFile, chunk, cancelID}) => {\n    try {\n      return await api.getChunkTracks(bedFile, chunk, getSignal(cancelID));\n    } finally {\n      requestOver(cancelID);\n    }\n  });\n\n  // Subscribe to file updates and always publish them over the link.\n  // We don't ever actually abort the subscription.\n  let subscriptionAbortController = new AbortController();\n  api.subscribeToFilenameChanges(() => {\n    rpc.rpc(\"_filename_change\", {});\n  }, subscriptionAbortController.signal);\n  // TODO: Do we need to stash the returned subscription somewhere safe?\n\n  // If a call is canceled, cancel it on this side.\n  rpc.registerRpcHandler('_cancel', ({cancelID}) => {\n    cancelRequest(cancelID);\n  })\n}\n","/**\n * Web Worker entry point for the local API implementation.\n *\n * Doesn't actually do any work, just hooks the guts of the implementation up\n * to the real Web Worker in the browser. Under Jest, we bypass this and\n * polyfill some event emitters around the implementation instead. See\n * WorkerFactory.js and its mock.\n */\n\nimport { setUpWorker } from \"./WorkerImplementation.mjs\";\n\n// Because of Create React App's Opinions, we can't use the idiomatic \"self\"\n// here without fiddling with the linter, even if we claim to be in the\n// \"worker\" eslint environment. See\n// <https://github.com/facebook/create-react-app/issues/12847>. Supposedly\n// there's a way to get at the service worker with \"this\", but \"this\" right now\n// appears undefined in the browser.\n//\n// So we turn off that linting rule\n/* eslint-disable no-restricted-globals */\nsetUpWorker(self);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [366], function() { return __webpack_require__(5635); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"366\":\"6d7de32b\",\"416\":\"eb85f570\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/sequenceTubeMap/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t635: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunksequence_tube_maps\"] = self[\"webpackChunksequence_tube_maps\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn __webpack_require__.e(366).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["globalThis","window","global","config","APIInterface","_classCallCheck","_createClass","key","value","_getChunkedData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","viewTarget","cancelSignal","wrap","_context","prev","next","Error","stop","_x","_x2","apply","arguments","_getFilenames","_callee2","_context2","_x3","handler","_putFile","_callee3","fileType","file","_context3","_x4","_x5","_x6","_getBedRegions","_callee4","bedFile","_context4","_x7","_x8","_getPathNames","_callee5","graphFile","_context5","_x9","_x10","_getChunkTracks","_callee6","chunk","_context6","_x11","_x12","_x13","parseRegion","region","includes","endsWith","region_col","input","parts","split","length","coordinates","replace","join","removeCommas","start_end","pos_dist","contig","slice","start","Number","end","distance","convertRegionToRangeRegion","undefined","stringifyRegion","concat","_ref","stringifyRangeRegion","getWasmBytes","_getWasmBytes","_callee10","blobBytes","blobImport","fs","_context10","cached","abrupt","sent","fetch","default","t0","console","error","import","readFile","log","blobToArrayBuffer","_blobToArrayBuffer","_callee11","blob","_context11","arrayBuffer","Promise","resolve","reject","reader","FileReader","addEventListener","result","readAsArrayBuffer","convertSchema","inGraph","outGraph","_step","nodeLength","Map","_iterator","_createForOfIteratorHelper","s","n","done","node","set","err","e","f","_step2","_iterator2","edge","_step3","_iterator3","path","_step4","_iterator4","visit","get","mapping","push","SyncWorkerBlobFile","_SyncOPFSFile","_inherits","_super","_createSuper","backing_blob","call","FileSystemSyncAccessHandlePolyfill","readonly","SyncOPFSFile","this","closed","FileReaderSync","size","buffer","options","_buffer$buffer","_buffer$byteOffset","_options$at","destinationBuffer","destinationOffest","byteOffset","startByte","at","Math","min","byteLength","partBlob","partBuffer","destinationArray","Uint8Array","sourceArray","to","GBZBaseAPI","_APIInterface","_super2","_this","files","filesByType","compiledWasm","_setUp","then","Response","WebAssembly","compileStreaming","compile","_callWasm","argv","workingDirectory","stdin","stdout","stderr","environment","fileDescriptors","nameToWASIFile","_i","_Object$entries","_Object$entries$_i","filename","wasi","instantiation","returnCode","stdOutText","stdErrText","setUp","File","OpenFile","Object","entries","_slicedToArray","warn","t1","PreopenDirectory","WASI","instantiate","wasiImport","TextDecoder","decode","data","_available","callWasm","graphTrack","trackKey","track","graphFileBlob","_yield$this$callWasm","tracks","trackType","parseInt","trackFile","JSON","parse","graph","gam","coloredNodes","response","_iterator5","_step5","_step5$value","type","_iterator6","_step6","fileName","bedFiles","name","toString","has","_callee7","_context7","bedRegions","_callee8","_context8","pathNames","_callee9","_context9","_x14","_x15","_x16","self","rpc","RpcProvider","message","transfer","postMessage","dispatch","api","abortControllers","getSignal","requestID","AbortController","signal","requestOver","delete","registerRpcHandler","_ref2","cancelID","getChunkedData","finish","_ref4","_ref3","getFilenames","_ref6","_ref5","putFile","_ref8","_ref7","getBedRegions","_ref10","_ref9","getPathNames","_ref12","_ref11","getChunkTracks","subscriptionAbortController","subscribeToFilenameChanges","_ref13","abort","setUpWorker","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","x","__webpack_exports__","O","deferred","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","splice","r","leafPrototypes","getProto","getPrototypeOf","obj","__proto__","t","mode","__esModule","ns","create","def","current","indexOf","getOwnPropertyNames","forEach","d","definition","o","defineProperty","enumerable","chunkId","all","reduce","promises","u","miniCssF","g","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop"],"sourceRoot":""}